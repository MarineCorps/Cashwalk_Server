plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

ext {
    querydslDir = "$buildDir/generated/querydsl"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    // Spring Boot Starter
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    //파이어베이스
    implementation 'com.google.firebase:firebase-admin:9.2.0'

    // Redis
    implementation 'org.apache.commons:commons-pool2'

    // Security
    implementation 'org.springframework.security:spring-security-crypto'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Google 로그인
    implementation 'com.google.api-client:google-api-client:1.34.1'
    implementation 'com.google.http-client:google-http-client-jackson2:1.39.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // MySQL
    runtimeOnly 'com.mysql:mysql-connector-j'

    // ✅ QueryDSL 필수 의존성
    implementation "com.querydsl:querydsl-jpa:5.1.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api:2.1.1"

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // ✅ STOMP WebSocket 메시징을 위한 Spring 의존성
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework:spring-messaging'

    // 테스트
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

springBoot {
    mainClass = 'com.example.cashwalk.CashwalkApplication'
}

bootJar {
    archiveFileName = 'cashwalk.jar'
}

sourceSets {
    main {
        java {
            srcDirs += [querydslDir]
        }
    }
}

// 👇 QueryDSL 빌드 자동화 Task 설정 추가
tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory = file(querydslDir)
}

clean {
    delete file(querydslDir)
}
